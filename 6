// Writing a program in JAVA to find “Prime and Palindrome” Numbers using Multi-Threading concept

class PrimeThread extends Thread {
    private int num;
    public PrimeThread(int num) {
        this.num = num;
    }
    public void run() {
        if (isPrime(num)) {
            System.out.println(num + " is Prime.");
        } else {
            System.out.println(num + " is not Prime.");
        }
    }
    private boolean isPrime(int n) {
        if (n <= 1) return false;
        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (n % i == 0) return false;
        }
        return true;
    }
}
class PalindromeThread extends Thread {
    private int num;
    public PalindromeThread(int num) {
        this.num = num;
    }
    public void run() {
        if (isPalindrome(num)) {
            System.out.println(num + " is Palindrome.");
        } else {
            System.out.println(num + " is not Palindrome.");
        }
    }
    private boolean isPalindrome(int n) {
        int original = n, reversed = 0;
        while (n != 0) {
            int digit = n % 10;
            reversed = reversed * 10 + digit;
            n /= 10;
        }
        return original == reversed;
    }
}
public class Main {
    public static void main(String[] args) {
        int number = 121;  
        PrimeThread primeThread = new PrimeThread(number);
        PalindromeThread palindromeThread = new PalindromeThread(number);
        primeThread.start();
        palindromeThread.start();
        try {
            primeThread.join();
            palindromeThread.join();
        } catch (InterruptedException e) {
            System.out.println("Thread interrupted");
        }
    }
}
